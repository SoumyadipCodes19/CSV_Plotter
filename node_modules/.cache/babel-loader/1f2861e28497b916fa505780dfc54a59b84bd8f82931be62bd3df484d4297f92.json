{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\CSV_Plotter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, PieChart, Pie, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1'];\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [chartType, setChartType] = useState(\"line\");\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [zoomDomain, setZoomDomain] = useState({\n    start: 0,\n    end: 10\n  });\n  useEffect(() => {\n    const html = document.documentElement;\n    darkMode ? html.classList.add(\"dark\") : html.classList.remove(\"dark\");\n  }, [darkMode]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      dynamicTyping: true,\n      complete: results => {\n        // Trim all string values in every row & every column\n        const cleanedData = results.data.map(row => {\n          const trimmedRow = {};\n          Object.entries(row).forEach(([key, val]) => {\n            trimmedRow[key] = typeof val === \"string\" ? val.trim() : val;\n          });\n          return trimmedRow;\n        });\n        setData(cleanedData);\n        if (results.data.length > 0) {\n          const cols = Object.keys(results.data[0]);\n          setHeaders(cols);\n\n          // Select the second column by default if exists, else empty\n          setSelectedColumns(cols.length > 1 ? [cols[1]] : []);\n          setZoomDomain({\n            start: 0,\n            end: cleanedData.length - 1\n          });\n        }\n      },\n      error: err => {\n        console.error(\"Error parsing CSV:\", err);\n      }\n    });\n  };\n  const handleChartTypeChange = e => setChartType(e.target.value);\n  const handleColumnToggle = col => {\n    setSelectedColumns(prev => prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]);\n  };\n\n  // Zoom In: Shrink range by removing 1/4th from both ends\n  const handleZoomIn = () => {\n    setZoomDomain(prev => {\n      const range = prev.end - prev.start;\n      if (range <= 2) return prev; // Prevent zooming in too far\n      const increment = Math.ceil(range / 4);\n      const newStart = prev.start + increment;\n      const newEnd = prev.end - increment;\n      if (newStart >= newEnd) return prev; // Prevent invalid range\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n\n  // Zoom Out: Expand range by adding half of current range to ends\n  const handleZoomOut = () => {\n    setZoomDomain(prev => {\n      const range = prev.end - prev.start;\n      const increment = Math.ceil(range / 2);\n      const newStart = Math.max(0, prev.start - increment);\n      const newEnd = Math.min(data.length - 1, prev.end + increment);\n      return {\n        start: newStart,\n        end: newEnd\n      };\n    });\n  };\n  const handleResetZoom = () => {\n    setZoomDomain({\n      start: 0,\n      end: data.length - 1\n    });\n  };\n\n  // Calculate data ranges for better Y-axis scaling\n  const getDataRange = (data, column) => {\n    const values = data.map(d => Number(d[column])).filter(v => !isNaN(v));\n    if (values.length === 0) return [0, 100];\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const padding = (max - min) * 0.1;\n    return [min - padding, max + padding];\n  };\n\n  // Render Y axes for all selected columns, with better scaling\n  const renderYAxes = chartData => selectedColumns.map((col, i) => {\n    const [min, max] = getDataRange(chartData, col);\n    return /*#__PURE__*/_jsxDEV(YAxis, {\n      yAxisId: col,\n      orientation: i % 2 === 0 ? 'left' : 'right',\n      stroke: COLORS[i % COLORS.length],\n      domain: [min, max],\n      allowDataOverflow: false,\n      tickFormatter: value => formatValue(value)\n    }, col, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  });\n  const renderLines = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Line, {\n    yAxisId: col,\n    type: \"monotone\",\n    dataKey: col,\n    stroke: COLORS[i % COLORS.length],\n    strokeWidth: 2,\n    dot: false,\n    isAnimationActive: false,\n    connectNulls: false\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this));\n  const renderBars = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Bar, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length],\n    isAnimationActive: false\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this));\n  const renderAreas = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Area, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length],\n    stroke: COLORS[i % COLORS.length],\n    fillOpacity: 0.6,\n    isAnimationActive: false,\n    connectNulls: false\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this));\n  const renderScatters = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Scatter, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length],\n    isAnimationActive: false\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this));\n\n  // Analyze the X-axis column to determine data pattern and create descriptive name\n  const analyzeXAxisColumn = () => {\n    if (!data.length || !headers.length) return headers[0] || \"X-Axis\";\n    const columnName = headers[0];\n    const values = data.map(row => row[columnName]).filter(val => val != null);\n    if (values.length === 0) return columnName;\n\n    // Check if values are dates\n    const dateValues = values.filter(val => val instanceof Date || !isNaN(Date.parse(val)));\n    if (dateValues.length > values.length * 0.8) {\n      return `${columnName} (Timeline)`;\n    }\n\n    // Check if values are numeric\n    const numericValues = values.filter(val => !isNaN(Number(val)));\n    if (numericValues.length > values.length * 0.8) {\n      const nums = numericValues.map(val => Number(val));\n      const min = Math.min(...nums);\n      const max = Math.max(...nums);\n      const range = max - min;\n      if (range === 0) {\n        return `${columnName} (Constant: ${min})`;\n      } else if (nums.length > 1) {\n        // Check if it's a sequence (like years, months, etc.)\n        const sorted = [...nums].sort((a, b) => a - b);\n        const differences = [];\n        for (let i = 1; i < sorted.length; i++) {\n          differences.push(sorted[i] - sorted[i - 1]);\n        }\n        const avgDiff = differences.reduce((sum, diff) => sum + diff, 0) / differences.length;\n        if (avgDiff > 0 && avgDiff < 1) {\n          return `${columnName} (Range: ${min.toFixed(2)} - ${max.toFixed(2)})`;\n        } else if (Number.isInteger(avgDiff) && avgDiff > 0) {\n          return `${columnName} (Sequence: +${Math.round(avgDiff)})`;\n        } else {\n          return `${columnName} (Range: ${min} - ${max})`;\n        }\n      }\n    }\n\n    // Check if values are categorical (strings with repetition)\n    const uniqueValues = [...new Set(values)];\n    if (uniqueValues.length < values.length * 0.5 && uniqueValues.length > 1) {\n      return `${columnName} (${uniqueValues.length} Categories)`;\n    }\n\n    // Default case - just show the column name with data type hint\n    const sampleValue = values[0];\n    if (typeof sampleValue === 'string') {\n      return `${columnName} (Text)`;\n    }\n    return columnName;\n  };\n\n  // Custom tick formatter for X-axis to handle long labels and dates\n  const formatXAxisTick = value => {\n    if (!value) return \"—\";\n\n    // Handle Date objects or date strings\n    let dateObj = null;\n    if (value instanceof Date) {\n      dateObj = value;\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\n      dateObj = new Date(value);\n    }\n    if (dateObj && !isNaN(dateObj.getTime())) {\n      // Check if the date has time information (not just midnight)\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\n      if (hasTime) {\n        // Show date and time\n        return dateObj.toLocaleString('en-US', {\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        });\n      } else {\n        // Show just date\n        return dateObj.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric',\n          year: '2-digit'\n        });\n      }\n    }\n\n    // Handle strings\n    if (typeof value === 'string' && value.length > 12) {\n      return value.substring(0, 10) + '...';\n    }\n    return String(value);\n  };\n\n  // Format values for display, handling different data types\n  const formatValue = value => {\n    if (!value && value !== 0) return \"—\";\n\n    // Handle Date objects or date strings\n    let dateObj = null;\n    if (value instanceof Date) {\n      dateObj = value;\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\n      dateObj = new Date(value);\n    }\n    if (dateObj && !isNaN(dateObj.getTime())) {\n      // Check if the date has time information\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\n      if (hasTime) {\n        return dateObj.toLocaleString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: false\n        });\n      } else {\n        return dateObj.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      }\n    }\n    if (typeof value === 'number') {\n      return value.toFixed(2);\n    }\n    return String(value);\n  };\n\n  // Render the chart, supporting normal (zoomed) and full modes\n  const renderChart = (mode = \"normal\") => {\n    if (!data.length || selectedColumns.length === 0 || headers.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"Please upload CSV and select columns.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Slice data based on zoom or show full data\n    const chartData = mode === \"full\" ? data : data.slice(zoomDomain.start, zoomDomain.end + 1);\n\n    // Get the descriptive X-axis name\n    const xAxisName = analyzeXAxisColumn();\n    const xAxisProps = {\n      dataKey: headers[0],\n      tickFormatter: formatXAxisTick,\n      allowDuplicatedCategory: false,\n      interval: 0,\n      // Force show all ticks for small datasets\n      angle: -45,\n      textAnchor: \"end\",\n      height: 100,\n      tick: {\n        fontSize: 11\n      },\n      minTickGap: 1,\n      label: {\n        value: xAxisName,\n        position: 'insideBottom',\n        offset: -10,\n        textAnchor: 'middle'\n      }\n    };\n    const chartMargin = {\n      top: 20,\n      right: 60,\n      left: 60,\n      bottom: 100\n    };\n    switch (chartType) {\n      case \"line\":\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: chartMargin,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            ...xAxisProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), renderYAxes(chartData), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: value => `${xAxisName}: ${formatValue(value)}`,\n            formatter: (value, name) => [formatValue(value), name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), renderLines()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this);\n      case \"bar\":\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: chartMargin,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            ...xAxisProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), renderYAxes(chartData), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: value => `${xAxisName}: ${formatValue(value)}`,\n            formatter: (value, name) => [formatValue(value), name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), renderBars()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this);\n      case \"area\":\n        return /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: chartData,\n          margin: chartMargin,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            ...xAxisProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), renderYAxes(chartData), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: value => `${xAxisName}: ${formatValue(value)}`,\n            formatter: (value, name) => [formatValue(value), name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), renderAreas()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this);\n      case \"scatter\":\n        return /*#__PURE__*/_jsxDEV(ScatterChart, {\n          data: chartData,\n          margin: chartMargin,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            ...xAxisProps,\n            type: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), renderYAxes(chartData), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: '3 3'\n            },\n            labelFormatter: value => `${xAxisName}: ${formatValue(value)}`,\n            formatter: (value, name) => [formatValue(value), name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), renderScatters()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this);\n      case \"pie\":\n        // For pie chart, aggregate data across all rows for selected columns\n        const pieData = selectedColumns.map((col, i) => {\n          const sum = chartData.reduce((acc, row) => {\n            const value = Number(row[col]);\n            return acc + (isNaN(value) ? 0 : value);\n          }, 0);\n          return {\n            name: col,\n            value: sum,\n            color: COLORS[i % COLORS.length]\n          };\n        }).filter(d => d.value > 0);\n\n        // Show warning if no meaningful data\n        if (pieData.length === 0 || pieData.every(d => d.value === 0)) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500\",\n            children: \"Selected columns contain no numeric data for Pie Chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 18\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(PieChart, {\n          margin: {\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: pieData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 100,\n            fill: \"#8884d8\",\n            label: ({\n              name,\n              percent\n            }) => `${name} ${(percent * 100).toFixed(1)}%`,\n            children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: entry.color\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatValue(value), 'Value']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Export functionality with html2canvas alternative\n  const exportChart = (isFullChart = false) => {\n    const chartElement = document.getElementById(isFullChart ? \"full-chart\" : \"chart\");\n    if (!chartElement) return;\n\n    // Simple fallback - create a data URL from SVG if possible\n    const svgElement = chartElement.querySelector('svg');\n    if (svgElement) {\n      const svgData = new XMLSerializer().serializeToString(svgElement);\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      canvas.width = svgElement.clientWidth || 800;\n      canvas.height = svgElement.clientHeight || 600;\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0);\n        const link = document.createElement('a');\n        link.download = isFullChart ? 'full_chart.png' : 'chart.png';\n        link.href = canvas.toDataURL('image/png');\n        link.click();\n      };\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgData)));\n    }\n  };\n\n  // Disable zoom buttons if zoom limits reached or no data\n  const canZoomIn = zoomDomain.end - zoomDomain.start > 2;\n  const canZoomOut = !(zoomDomain.start === 0 && zoomDomain.end === data.length - 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-6xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"CSV Plotter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors\",\n        \"aria-label\": \"Toggle dark mode\",\n        children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      className: \"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600 w-full max-w-md\",\n      \"aria-label\": \"Upload CSV file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-4 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: chartType,\n          onChange: handleChartTypeChange,\n          className: \"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\",\n          \"aria-label\": \"Select chart type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"line\",\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"area\",\n            children: \"Area Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"scatter\",\n            children: \"Scatter Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pie\",\n            children: \"Pie Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: [\"Showing \", zoomDomain.end - zoomDomain.start + 1, \" of \", data.length, \" data points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 font-semibold\",\n          children: \"Select Columns to Plot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: headers.slice(1).map(col => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-1 px-3 py-1 border rounded cursor-pointer select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedColumns.includes(col),\n              onChange: () => handleColumnToggle(col),\n              className: \"mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this)]\n          }, col, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), selectedColumns.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600 mt-2\",\n          children: \"Please select at least one column to plot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this), chartType !== 'pie' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomIn,\n          disabled: !canZoomIn,\n          className: `px-3 py-2 rounded text-white transition-colors ${canZoomIn ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`,\n          \"aria-label\": \"Zoom in\",\n          children: \"Zoom In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomOut,\n          disabled: !canZoomOut,\n          className: `px-3 py-2 rounded text-white transition-colors ${canZoomOut ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`,\n          \"aria-label\": \"Zoom out\",\n          children: \"Zoom Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetZoom,\n          className: \"px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\",\n          \"aria-label\": \"Reset zoom\",\n          children: \"Reset Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChart(false),\n          className: \"px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700 transition-colors\",\n          \"aria-label\": \"Export current view as PNG\",\n          children: \"Export View as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChart(true),\n          className: \"px-4 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 transition-colors\",\n          \"aria-label\": \"Export full chart as PNG\",\n          children: \"Export Full Chart as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        className: \"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"600px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: renderChart()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"full-chart\",\n        style: {\n          position: \"absolute\",\n          top: \"-9999px\",\n          left: \"-9999px\",\n          width: 1200,\n          height: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: renderChart(\"full\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I+WL9BNt6dnXl8kLS3ljh5fRtPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","ScatterChart","Scatter","PieChart","Pie","Cell","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","App","_s","data","setData","headers","setHeaders","chartType","setChartType","selectedColumns","setSelectedColumns","darkMode","setDarkMode","zoomDomain","setZoomDomain","start","end","html","document","documentElement","classList","add","remove","handleFileUpload","e","file","target","files","parse","header","skipEmptyLines","dynamicTyping","complete","results","cleanedData","map","row","trimmedRow","Object","entries","forEach","key","val","trim","length","cols","keys","error","err","console","handleChartTypeChange","value","handleColumnToggle","col","prev","includes","filter","c","handleZoomIn","range","increment","Math","ceil","newStart","newEnd","handleZoomOut","max","min","handleResetZoom","getDataRange","column","values","d","Number","v","isNaN","padding","renderYAxes","chartData","i","yAxisId","orientation","stroke","domain","allowDataOverflow","tickFormatter","formatValue","fileName","_jsxFileName","lineNumber","columnNumber","renderLines","type","dataKey","strokeWidth","dot","isAnimationActive","connectNulls","renderBars","fill","renderAreas","fillOpacity","renderScatters","analyzeXAxisColumn","columnName","dateValues","Date","numericValues","nums","sorted","sort","a","b","differences","push","avgDiff","reduce","sum","diff","toFixed","isInteger","round","uniqueValues","Set","sampleValue","formatXAxisTick","dateObj","getTime","hasTime","getHours","getMinutes","getSeconds","toLocaleString","month","day","hour","minute","hour12","toLocaleDateString","year","substring","String","second","renderChart","mode","className","children","slice","xAxisName","xAxisProps","allowDuplicatedCategory","interval","angle","textAnchor","height","tick","fontSize","minTickGap","label","position","offset","chartMargin","top","right","left","bottom","margin","strokeDasharray","labelFormatter","formatter","name","cursor","pieData","acc","color","every","nameKey","cx","cy","outerRadius","percent","entry","index","exportChart","isFullChart","chartElement","getElementById","svgElement","querySelector","svgData","XMLSerializer","serializeToString","canvas","createElement","ctx","getContext","img","Image","width","clientWidth","clientHeight","onload","drawImage","link","download","href","toDataURL","click","src","btoa","unescape","encodeURIComponent","canZoomIn","canZoomOut","onClick","accept","onChange","checked","disabled","id","style","_c","$RefreshReg$"],"sources":["C:/Users/soumy/CSV_Plotter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport {\r\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  AreaChart, Area, ScatterChart, Scatter, PieChart, Pie, Cell\r\n} from \"recharts\";\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1'];\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  const [chartType, setChartType] = useState(\"line\");\r\n  const [selectedColumns, setSelectedColumns] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [zoomDomain, setZoomDomain] = useState({ start: 0, end: 10 });\r\n\r\n  useEffect(() => {\r\n    const html = document.documentElement;\r\n    darkMode ? html.classList.add(\"dark\") : html.classList.remove(\"dark\");\r\n  }, [darkMode]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    Papa.parse(file, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      dynamicTyping: true,\r\n      complete: (results) => {\r\n        // Trim all string values in every row & every column\r\n        const cleanedData = results.data.map(row => {\r\n          const trimmedRow = {};\r\n          Object.entries(row).forEach(([key, val]) => {\r\n            trimmedRow[key] = typeof val === \"string\" ? val.trim() : val;\r\n          });\r\n          return trimmedRow;\r\n        });\r\n        setData(cleanedData);\r\n\r\n        if (results.data.length > 0) {\r\n          const cols = Object.keys(results.data[0]);\r\n          setHeaders(cols);\r\n\r\n          // Select the second column by default if exists, else empty\r\n          setSelectedColumns(cols.length > 1 ? [cols[1]] : []);\r\n\r\n          setZoomDomain({ start: 0, end: cleanedData.length - 1 });\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error(\"Error parsing CSV:\", err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChartTypeChange = (e) => setChartType(e.target.value);\r\n\r\n  const handleColumnToggle = (col) => {\r\n    setSelectedColumns(prev =>\r\n      prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]\r\n    );\r\n  };\r\n\r\n  // Zoom In: Shrink range by removing 1/4th from both ends\r\n  const handleZoomIn = () => {\r\n    setZoomDomain(prev => {\r\n      const range = prev.end - prev.start;\r\n      if (range <= 2) return prev; // Prevent zooming in too far\r\n      const increment = Math.ceil(range / 4);\r\n      const newStart = prev.start + increment;\r\n      const newEnd = prev.end - increment;\r\n      if (newStart >= newEnd) return prev; // Prevent invalid range\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n      };\r\n    });\r\n  };\r\n\r\n  // Zoom Out: Expand range by adding half of current range to ends\r\n  const handleZoomOut = () => {\r\n    setZoomDomain(prev => {\r\n      const range = prev.end - prev.start;\r\n      const increment = Math.ceil(range / 2);\r\n      const newStart = Math.max(0, prev.start - increment);\r\n      const newEnd = Math.min(data.length - 1, prev.end + increment);\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleResetZoom = () => {\r\n    setZoomDomain({ start: 0, end: data.length - 1 });\r\n  };\r\n\r\n  // Calculate data ranges for better Y-axis scaling\r\n  const getDataRange = (data, column) => {\r\n    const values = data.map(d => Number(d[column])).filter(v => !isNaN(v));\r\n    if (values.length === 0) return [0, 100];\r\n    const min = Math.min(...values);\r\n    const max = Math.max(...values);\r\n    const padding = (max - min) * 0.1;\r\n    return [min - padding, max + padding];\r\n  };\r\n\r\n  // Render Y axes for all selected columns, with better scaling\r\n  const renderYAxes = (chartData) => selectedColumns.map((col, i) => {\r\n    const [min, max] = getDataRange(chartData, col);\r\n    return (\r\n      <YAxis\r\n        key={col}\r\n        yAxisId={col}\r\n        orientation={i % 2 === 0 ? 'left' : 'right'}\r\n        stroke={COLORS[i % COLORS.length]}\r\n        domain={[min, max]}\r\n        allowDataOverflow={false}\r\n        tickFormatter={(value) => formatValue(value)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderLines = () => selectedColumns.map((col, i) => (\r\n    <Line\r\n      key={col}\r\n      yAxisId={col}\r\n      type=\"monotone\"\r\n      dataKey={col}\r\n      stroke={COLORS[i % COLORS.length]}\r\n      strokeWidth={2}\r\n      dot={false}\r\n      isAnimationActive={false}\r\n      connectNulls={false}\r\n    />\r\n  ));\r\n\r\n  const renderBars = () => selectedColumns.map((col, i) => (\r\n    <Bar\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      isAnimationActive={false}\r\n    />\r\n  ));\r\n\r\n  const renderAreas = () => selectedColumns.map((col, i) => (\r\n    <Area\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      stroke={COLORS[i % COLORS.length]}\r\n      fillOpacity={0.6}\r\n      isAnimationActive={false}\r\n      connectNulls={false}\r\n    />\r\n  ));\r\n\r\n  const renderScatters = () => selectedColumns.map((col, i) => (\r\n    <Scatter\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      isAnimationActive={false}\r\n    />\r\n  ));\r\n\r\n  // Analyze the X-axis column to determine data pattern and create descriptive name\r\n  const analyzeXAxisColumn = () => {\r\n    if (!data.length || !headers.length) return headers[0] || \"X-Axis\";\r\n    \r\n    const columnName = headers[0];\r\n    const values = data.map(row => row[columnName]).filter(val => val != null);\r\n    \r\n    if (values.length === 0) return columnName;\r\n    \r\n    // Check if values are dates\r\n    const dateValues = values.filter(val => val instanceof Date || !isNaN(Date.parse(val)));\r\n    if (dateValues.length > values.length * 0.8) {\r\n      return `${columnName} (Timeline)`;\r\n    }\r\n    \r\n    // Check if values are numeric\r\n    const numericValues = values.filter(val => !isNaN(Number(val)));\r\n    if (numericValues.length > values.length * 0.8) {\r\n      const nums = numericValues.map(val => Number(val));\r\n      const min = Math.min(...nums);\r\n      const max = Math.max(...nums);\r\n      const range = max - min;\r\n      \r\n      if (range === 0) {\r\n        return `${columnName} (Constant: ${min})`;\r\n      } else if (nums.length > 1) {\r\n        // Check if it's a sequence (like years, months, etc.)\r\n        const sorted = [...nums].sort((a, b) => a - b);\r\n        const differences = [];\r\n        for (let i = 1; i < sorted.length; i++) {\r\n          differences.push(sorted[i] - sorted[i-1]);\r\n        }\r\n        const avgDiff = differences.reduce((sum, diff) => sum + diff, 0) / differences.length;\r\n        \r\n        if (avgDiff > 0 && avgDiff < 1) {\r\n          return `${columnName} (Range: ${min.toFixed(2)} - ${max.toFixed(2)})`;\r\n        } else if (Number.isInteger(avgDiff) && avgDiff > 0) {\r\n          return `${columnName} (Sequence: +${Math.round(avgDiff)})`;\r\n        } else {\r\n          return `${columnName} (Range: ${min} - ${max})`;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Check if values are categorical (strings with repetition)\r\n    const uniqueValues = [...new Set(values)];\r\n    if (uniqueValues.length < values.length * 0.5 && uniqueValues.length > 1) {\r\n      return `${columnName} (${uniqueValues.length} Categories)`;\r\n    }\r\n    \r\n    // Default case - just show the column name with data type hint\r\n    const sampleValue = values[0];\r\n    if (typeof sampleValue === 'string') {\r\n      return `${columnName} (Text)`;\r\n    }\r\n    \r\n    return columnName;\r\n  };\r\n\r\n  // Custom tick formatter for X-axis to handle long labels and dates\r\n  const formatXAxisTick = (value) => {\r\n    if (!value) return \"—\";\r\n    \r\n    // Handle Date objects or date strings\r\n    let dateObj = null;\r\n    if (value instanceof Date) {\r\n      dateObj = value;\r\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\r\n      dateObj = new Date(value);\r\n    }\r\n    \r\n    if (dateObj && !isNaN(dateObj.getTime())) {\r\n      // Check if the date has time information (not just midnight)\r\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\r\n      \r\n      if (hasTime) {\r\n        // Show date and time\r\n        return dateObj.toLocaleString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          hour12: false\r\n        });\r\n      } else {\r\n        // Show just date\r\n        return dateObj.toLocaleDateString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric',\r\n          year: '2-digit'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Handle strings\r\n    if (typeof value === 'string' && value.length > 12) {\r\n      return value.substring(0, 10) + '...';\r\n    }\r\n    \r\n    return String(value);\r\n  };\r\n\r\n  // Format values for display, handling different data types\r\n  const formatValue = (value) => {\r\n    if (!value && value !== 0) return \"—\";\r\n    \r\n    // Handle Date objects or date strings\r\n    let dateObj = null;\r\n    if (value instanceof Date) {\r\n      dateObj = value;\r\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\r\n      dateObj = new Date(value);\r\n    }\r\n    \r\n    if (dateObj && !isNaN(dateObj.getTime())) {\r\n      // Check if the date has time information\r\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\r\n      \r\n      if (hasTime) {\r\n        return dateObj.toLocaleString('en-US', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit',\r\n          hour12: false\r\n        });\r\n      } else {\r\n        return dateObj.toLocaleDateString('en-US', {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        });\r\n      }\r\n    }\r\n    \r\n    if (typeof value === 'number') {\r\n      return value.toFixed(2);\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  // Render the chart, supporting normal (zoomed) and full modes\r\n  const renderChart = (mode = \"normal\") => {\r\n    if (!data.length || selectedColumns.length === 0 || headers.length === 0) {\r\n      return <p className=\"text-center text-gray-500\">Please upload CSV and select columns.</p>;\r\n    }\r\n\r\n    // Slice data based on zoom or show full data\r\n    const chartData = mode === \"full\" ? data : data.slice(zoomDomain.start, zoomDomain.end + 1);\r\n    \r\n    // Get the descriptive X-axis name\r\n    const xAxisName = analyzeXAxisColumn();\r\n\r\n    const xAxisProps = {\r\n      dataKey: headers[0],\r\n      tickFormatter: formatXAxisTick,\r\n      allowDuplicatedCategory: false,\r\n      interval: 0, // Force show all ticks for small datasets\r\n      angle: -45,\r\n      textAnchor: \"end\",\r\n      height: 100,\r\n      tick: { fontSize: 11 },\r\n      minTickGap: 1,\r\n      label: { value: xAxisName, position: 'insideBottom', offset: -10, textAnchor: 'middle' }\r\n    };\r\n\r\n    const chartMargin = { top: 20, right: 60, left: 60, bottom: 100 };\r\n\r\n    switch(chartType) {\r\n      case \"line\":\r\n        return (\r\n          <LineChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderLines()}\r\n          </LineChart>\r\n        );\r\n\r\n      case \"bar\":\r\n        return (\r\n          <BarChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderBars()}\r\n          </BarChart>\r\n        );\r\n\r\n      case \"area\":\r\n        return (\r\n          <AreaChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderAreas()}\r\n          </AreaChart>\r\n        );\r\n\r\n      case \"scatter\":\r\n        return (\r\n          <ScatterChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis \r\n              {...xAxisProps}\r\n              type=\"category\"\r\n            />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              cursor={{ strokeDasharray: '3 3' }}\r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderScatters()}\r\n          </ScatterChart>\r\n        );\r\n\r\n      case \"pie\":\r\n        // For pie chart, aggregate data across all rows for selected columns\r\n        const pieData = selectedColumns.map((col, i) => {\r\n          const sum = chartData.reduce((acc, row) => {\r\n            const value = Number(row[col]);\r\n            return acc + (isNaN(value) ? 0 : value);\r\n          }, 0);\r\n          return {\r\n            name: col,\r\n            value: sum,\r\n            color: COLORS[i % COLORS.length],\r\n          };\r\n        }).filter(d => d.value > 0);\r\n\r\n        // Show warning if no meaningful data\r\n        if (pieData.length === 0 || pieData.every(d => d.value === 0)) {\r\n          return <p className=\"text-center text-gray-500\">Selected columns contain no numeric data for Pie Chart.</p>;\r\n        }\r\n\r\n        return (\r\n          <PieChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n            <Pie\r\n              data={pieData}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              outerRadius={100}\r\n              fill=\"#8884d8\"\r\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(1)}%`}\r\n            >\r\n              {pieData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip formatter={(value) => [formatValue(value), 'Value']} />\r\n            <Legend />\r\n          </PieChart>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Export functionality with html2canvas alternative\r\n  const exportChart = (isFullChart = false) => {\r\n    const chartElement = document.getElementById(isFullChart ? \"full-chart\" : \"chart\");\r\n    if (!chartElement) return;\r\n    \r\n    // Simple fallback - create a data URL from SVG if possible\r\n    const svgElement = chartElement.querySelector('svg');\r\n    if (svgElement) {\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const img = new Image();\r\n      \r\n      canvas.width = svgElement.clientWidth || 800;\r\n      canvas.height = svgElement.clientHeight || 600;\r\n      \r\n      img.onload = function() {\r\n        ctx.drawImage(img, 0, 0);\r\n        const link = document.createElement('a');\r\n        link.download = isFullChart ? 'full_chart.png' : 'chart.png';\r\n        link.href = canvas.toDataURL('image/png');\r\n        link.click();\r\n      };\r\n      \r\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgData)));\r\n    }\r\n  };\r\n\r\n  // Disable zoom buttons if zoom limits reached or no data\r\n  const canZoomIn = zoomDomain.end - zoomDomain.start > 2;\r\n  const canZoomOut = !(zoomDomain.start === 0 && zoomDomain.end === data.length - 1);\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-6xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-3xl font-bold\">CSV Plotter</h1>\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className=\"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors\"\r\n          aria-label=\"Toggle dark mode\"\r\n        >\r\n          {darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        className=\"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600 w-full max-w-md\"\r\n        aria-label=\"Upload CSV file\"\r\n      />\r\n\r\n      {data.length > 0 && (\r\n        <>\r\n          <div className=\"mb-4 flex flex-wrap gap-4 items-center\">\r\n            <select\r\n              value={chartType}\r\n              onChange={handleChartTypeChange}\r\n              className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\r\n              aria-label=\"Select chart type\"\r\n            >\r\n              <option value=\"line\">Line Chart</option>\r\n              <option value=\"bar\">Bar Chart</option>\r\n              <option value=\"area\">Area Chart</option>\r\n              <option value=\"scatter\">Scatter Chart</option>\r\n              <option value=\"pie\">Pie Chart</option>\r\n            </select>\r\n\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Showing {zoomDomain.end - zoomDomain.start + 1} of {data.length} data points\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <p className=\"mb-2 font-semibold\">Select Columns to Plot:</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {headers.slice(1).map((col) => (\r\n                <label key={col} className=\"flex items-center gap-1 px-3 py-1 border rounded cursor-pointer select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedColumns.includes(col)}\r\n                    onChange={() => handleColumnToggle(col)}\r\n                    className=\"mr-1\"\r\n                  />\r\n                  <span className=\"text-sm\">{col}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            {selectedColumns.length === 0 && (\r\n              <p className=\"text-sm text-red-600 mt-2\">Please select at least one column to plot.</p>\r\n            )}\r\n          </div>\r\n\r\n          {chartType !== 'pie' && (\r\n            <div className=\"mb-4 flex flex-wrap gap-2\">\r\n              <button\r\n                onClick={handleZoomIn}\r\n                disabled={!canZoomIn}\r\n                className={`px-3 py-2 rounded text-white transition-colors ${canZoomIn ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`}\r\n                aria-label=\"Zoom in\"\r\n              >\r\n                Zoom In\r\n              </button>\r\n              <button\r\n                onClick={handleZoomOut}\r\n                disabled={!canZoomOut}\r\n                className={`px-3 py-2 rounded text-white transition-colors ${canZoomOut ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`}\r\n                aria-label=\"Zoom out\"\r\n              >\r\n                Zoom Out\r\n              </button>\r\n              <button\r\n                onClick={handleResetZoom}\r\n                className=\"px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\r\n                aria-label=\"Reset zoom\"\r\n              >\r\n                Reset Zoom\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-4 flex flex-wrap gap-2\">\r\n            <button\r\n              onClick={() => exportChart(false)}\r\n              className=\"px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700 transition-colors\"\r\n              aria-label=\"Export current view as PNG\"\r\n            >\r\n              Export View as PNG\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => exportChart(true)}\r\n              className=\"px-4 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 transition-colors\"\r\n              aria-label=\"Export full chart as PNG\"\r\n            >\r\n              Export Full Chart as PNG\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            id=\"chart\"\r\n            className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg overflow-hidden\"\r\n          >\r\n            <div style={{ width: \"100%\", height: \"600px\" }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                {renderChart()}\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Hidden chart for full export */}\r\n          <div\r\n            id=\"full-chart\"\r\n            style={{ position: \"absolute\", top: \"-9999px\", left: \"-9999px\", width: 1200, height: 800 }}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              {renderChart(\"full\")}\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}