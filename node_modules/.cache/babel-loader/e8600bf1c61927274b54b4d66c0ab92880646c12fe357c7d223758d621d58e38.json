{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\react-tailwind-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n\n  // When user uploads a CSV file\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    Papa.parse(file, {\n      header: true,\n      // parse CSV with header row\n      skipEmptyLines: true,\n      complete: results => {\n        setData(results.data); // store parsed data\n        setHeaders(Object.keys(results.data[0])); // extract headers (column names)\n      }\n    });\n  };\n\n  // Export chart by rendering the chart div as an image\n  const exportChart = id => {\n    const chart = document.getElementById(id);\n    html2canvas(chart).then(canvas => {\n      const link = document.createElement(\"a\");\n      link.download = `${id}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"CSV Plotter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      className: \"mb-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), data.length > 0 && headers.length >= 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lineChart\",\n        className: \"mb-6 bg-white p-4 shadow rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Line Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              stroke: \"#ccc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: headers[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: headers[1],\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChart(\"lineChart\"),\n          className: \"mt-2 px-4 py-1 bg-blue-500 text-white rounded\",\n          children: \"Download Line Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"barChart\",\n        className: \"mb-6 bg-white p-4 shadow rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              stroke: \"#ccc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: headers[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: headers[1],\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChart(\"barChart\"),\n          className: \"mt-2 px-4 py-1 bg-green-500 text-white rounded\",\n          children: \"Download Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LGaVUXd3zNV5Gz4uDRP0rr7FTAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Papa","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","headers","setHeaders","handleFileUpload","e","file","target","files","parse","header","skipEmptyLines","complete","results","Object","keys","exportChart","id","chart","document","getElementById","then","canvas","link","createElement","download","href","toDataURL","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","length","width","height","stroke","dataKey","onClick","fill","_c","$RefreshReg$"],"sources":["C:/Users/soumy/react-tailwind-starter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n\r\n  // When user uploads a CSV file\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    Papa.parse(file, {\r\n      header: true,        // parse CSV with header row\r\n      skipEmptyLines: true,\r\n      complete: (results) => {\r\n        setData(results.data);                  // store parsed data\r\n        setHeaders(Object.keys(results.data[0]));  // extract headers (column names)\r\n      },\r\n    });\r\n  };\r\n\r\n  // Export chart by rendering the chart div as an image\r\n  const exportChart = (id) => {\r\n    const chart = document.getElementById(id);\r\n    html2canvas(chart).then((canvas) => {\r\n      const link = document.createElement(\"a\");\r\n      link.download = `${id}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">CSV Plotter</h1>\r\n\r\n      {/* File Upload Input */}\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} className=\"mb-6\" />\r\n\r\n      {/* Show charts only if data is present and there are at least 2 columns */}\r\n      {data.length > 0 && headers.length >= 2 && (\r\n        <>\r\n          {/* Line Chart */}\r\n          <div id=\"lineChart\" className=\"mb-6 bg-white p-4 shadow rounded\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Line Chart</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={data}>\r\n                <CartesianGrid stroke=\"#ccc\" />\r\n                <XAxis dataKey={headers[0]} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey={headers[1]} stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <button onClick={() => exportChart(\"lineChart\")} className=\"mt-2 px-4 py-1 bg-blue-500 text-white rounded\">\r\n              Download Line Chart\r\n            </button>\r\n          </div>\r\n\r\n          {/* Bar Chart */}\r\n          <div id=\"barChart\" className=\"mb-6 bg-white p-4 shadow rounded\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Bar Chart</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={data}>\r\n                <CartesianGrid stroke=\"#ccc\" />\r\n                <XAxis dataKey={headers[0]} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey={headers[1]} fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            <button onClick={() => exportChart(\"barChart\")} className=\"mt-2 px-4 py-1 bg-green-500 text-white rounded\">\r\n              Download Bar Chart\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}