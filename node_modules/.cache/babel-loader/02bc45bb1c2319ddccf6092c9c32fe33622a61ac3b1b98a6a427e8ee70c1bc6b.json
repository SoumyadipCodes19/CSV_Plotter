{"ast":null,"code":"import _objectSpread from\"C:/Users/soumy/CSV_Plotter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import Papa from\"papaparse\";import{LineChart,Line,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,AreaChart,Area,ScatterChart,Scatter,PieChart,Pie,Cell}from\"recharts\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042','#8dd1e1'];function App(){const[data,setData]=useState([]);const[headers,setHeaders]=useState([]);const[chartType,setChartType]=useState(\"line\");const[selectedColumns,setSelectedColumns]=useState([]);const[darkMode,setDarkMode]=useState(false);const[zoomDomain,setZoomDomain]=useState({start:0,end:10});const[xAxisStrategy,setXAxisStrategy]=useState(\"auto\");// auto, sparse, sample, none\nuseEffect(()=>{const html=document.documentElement;darkMode?html.classList.add(\"dark\"):html.classList.remove(\"dark\");},[darkMode]);const handleFileUpload=e=>{const file=e.target.files[0];if(!file)return;Papa.parse(file,{header:true,skipEmptyLines:true,dynamicTyping:true,complete:results=>{// Trim all string values in every row & every column\nconst cleanedData=results.data.map(row=>{const trimmedRow={};Object.entries(row).forEach(_ref=>{let[key,val]=_ref;trimmedRow[key]=typeof val===\"string\"?val.trim():val;});return trimmedRow;});setData(cleanedData);if(results.data.length>0){const cols=Object.keys(results.data[0]);setHeaders(cols);// Select the second column by default if exists, else empty\nsetSelectedColumns(cols.length>1?[cols[1]]:[]);setZoomDomain({start:0,end:cleanedData.length-1});}},error:err=>{console.error(\"Error parsing CSV:\",err);}});};const handleChartTypeChange=e=>setChartType(e.target.value);const handleColumnToggle=col=>{setSelectedColumns(prev=>prev.includes(col)?prev.filter(c=>c!==col):[...prev,col]);};// Zoom In: Shrink range by removing 1/4th from both ends\nconst handleZoomIn=()=>{setZoomDomain(prev=>{const range=prev.end-prev.start;if(range<=2)return prev;// Prevent zooming in too far\nconst increment=Math.ceil(range/4);const newStart=prev.start+increment;const newEnd=prev.end-increment;if(newStart>=newEnd)return prev;// Prevent invalid range\nreturn{start:newStart,end:newEnd};});};// Zoom Out: Expand range by adding half of current range to ends\nconst handleZoomOut=()=>{setZoomDomain(prev=>{const range=prev.end-prev.start;const increment=Math.ceil(range/2);const newStart=Math.max(0,prev.start-increment);const newEnd=Math.min(data.length-1,prev.end+increment);return{start:newStart,end:newEnd};});};const handleResetZoom=()=>{setZoomDomain({start:0,end:data.length-1});};// Calculate data ranges for better Y-axis scaling\nconst getDataRange=(data,column)=>{const values=data.map(d=>Number(d[column])).filter(v=>!isNaN(v));if(values.length===0)return[0,100];const min=Math.min(...values);const max=Math.max(...values);const padding=(max-min)*0.1;return[min-padding,max+padding];};// Smart interval calculation for X-axis ticks\nconst calculateTickInterval=function(dataLength){let chartWidth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:800;const maxTicks=Math.floor(chartWidth/100);// Assume each tick needs ~100px for readability\nif(dataLength<=maxTicks){return 0;// Show all ticks\n}// Calculate interval to show approximately maxTicks\nconst interval=Math.ceil(dataLength/maxTicks);return interval-1;// Recharts uses 0-based interval\n};// Sample data for better performance with large datasets\nconst sampleData=function(data){let maxPoints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1000;if(data.length<=maxPoints)return data;const step=Math.ceil(data.length/maxPoints);const sampled=[];for(let i=0;i<data.length;i+=step){sampled.push(data[i]);}// Always include the last point\nif(sampled[sampled.length-1]!==data[data.length-1]){sampled.push(data[data.length-1]);}return sampled;};// Render Y axes for all selected columns, with better scaling\nconst renderYAxes=chartData=>selectedColumns.map((col,i)=>{const[min,max]=getDataRange(chartData,col);return/*#__PURE__*/_jsx(YAxis,{yAxisId:col,orientation:i%2===0?'left':'right',stroke:COLORS[i%COLORS.length],domain:[min,max],allowDataOverflow:false,tickFormatter:value=>formatValue(value)},col);});const renderLines=()=>selectedColumns.map((col,i)=>/*#__PURE__*/_jsx(Line,{yAxisId:col,type:\"monotone\",dataKey:col,stroke:COLORS[i%COLORS.length],strokeWidth:2,dot:false,isAnimationActive:false,connectNulls:false},col));const renderBars=()=>selectedColumns.map((col,i)=>/*#__PURE__*/_jsx(Bar,{yAxisId:col,dataKey:col,fill:COLORS[i%COLORS.length],isAnimationActive:false},col));const renderAreas=()=>selectedColumns.map((col,i)=>/*#__PURE__*/_jsx(Area,{yAxisId:col,dataKey:col,fill:COLORS[i%COLORS.length],stroke:COLORS[i%COLORS.length],fillOpacity:0.6,isAnimationActive:false,connectNulls:false},col));const renderScatters=()=>selectedColumns.map((col,i)=>/*#__PURE__*/_jsx(Scatter,{yAxisId:col,dataKey:col,fill:COLORS[i%COLORS.length],isAnimationActive:false},col));// Analyze the X-axis column to determine data pattern and create descriptive name\nconst analyzeXAxisColumn=()=>{if(!data.length||!headers.length)return headers[0]||\"X-Axis\";const columnName=headers[0];const values=data.map(row=>row[columnName]).filter(val=>val!=null);if(values.length===0)return columnName;// Check if values are dates\nconst dateValues=values.filter(val=>val instanceof Date||!isNaN(Date.parse(val)));if(dateValues.length>values.length*0.8){return\"\".concat(columnName,\" (Timeline)\");}// Check if values are numeric\nconst numericValues=values.filter(val=>!isNaN(Number(val)));if(numericValues.length>values.length*0.8){const nums=numericValues.map(val=>Number(val));const min=Math.min(...nums);const max=Math.max(...nums);const range=max-min;if(range===0){return\"\".concat(columnName,\" (Constant: \").concat(min,\")\");}else if(nums.length>1){// Check if it's a sequence (like years, months, etc.)\nconst sorted=[...nums].sort((a,b)=>a-b);const differences=[];for(let i=1;i<sorted.length;i++){differences.push(sorted[i]-sorted[i-1]);}const avgDiff=differences.reduce((sum,diff)=>sum+diff,0)/differences.length;if(avgDiff>0&&avgDiff<1){return\"\".concat(columnName,\" (Range: \").concat(min.toFixed(2),\" - \").concat(max.toFixed(2),\")\");}else if(Number.isInteger(avgDiff)&&avgDiff>0){return\"\".concat(columnName,\" (Sequence: +\").concat(Math.round(avgDiff),\")\");}else{return\"\".concat(columnName,\" (Range: \").concat(min,\" - \").concat(max,\")\");}}}// Check if values are categorical (strings with repetition)\nconst uniqueValues=[...new Set(values)];if(uniqueValues.length<values.length*0.5&&uniqueValues.length>1){return\"\".concat(columnName,\" (\").concat(uniqueValues.length,\" Categories)\");}// Default case - just show the column name with data type hint\nconst sampleValue=values[0];if(typeof sampleValue==='string'){return\"\".concat(columnName,\" (Text)\");}return columnName;};// Custom tick formatter for X-axis to handle long labels and dates\nconst formatXAxisTick=value=>{if(!value)return\"—\";// Handle Date objects or date strings\nlet dateObj=null;if(value instanceof Date){dateObj=value;}else if(typeof value==='string'&&!isNaN(Date.parse(value))){dateObj=new Date(value);}if(dateObj&&!isNaN(dateObj.getTime())){// Check if the date has time information (not just midnight)\nconst hasTime=dateObj.getHours()!==0||dateObj.getMinutes()!==0||dateObj.getSeconds()!==0;if(hasTime){// Show date and time\nreturn dateObj.toLocaleString('en-US',{month:'short',day:'numeric',hour:'2-digit',minute:'2-digit',hour12:false});}else{// Show just date\nreturn dateObj.toLocaleDateString('en-US',{month:'short',day:'numeric',year:'2-digit'});}}// Handle strings\nif(typeof value==='string'&&value.length>8){return value.substring(0,6)+'...';}return String(value);};// Format values for display, handling different data types\nconst formatValue=value=>{if(!value&&value!==0)return\"—\";// Handle Date objects or date strings\nlet dateObj=null;if(value instanceof Date){dateObj=value;}else if(typeof value==='string'&&!isNaN(Date.parse(value))){dateObj=new Date(value);}if(dateObj&&!isNaN(dateObj.getTime())){// Check if the date has time information\nconst hasTime=dateObj.getHours()!==0||dateObj.getMinutes()!==0||dateObj.getSeconds()!==0;if(hasTime){return dateObj.toLocaleString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit',second:'2-digit',hour12:false});}else{return dateObj.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});}}if(typeof value==='number'){return value.toFixed(2);}return String(value);};// Render the chart, supporting normal (zoomed) and full modes\nconst renderChart=function(){let mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"normal\";if(!data.length||selectedColumns.length===0||headers.length===0){return/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500\",children:\"Please upload CSV and select columns.\"});}// Slice data based on zoom or show full data\nlet chartData=mode===\"full\"?data:data.slice(zoomDomain.start,zoomDomain.end+1);// For large datasets, apply sampling if needed\nif(mode===\"full\"&&chartData.length>2000){switch(xAxisStrategy){case\"sample\":chartData=sampleData(chartData,1000);break;// For other strategies, we'll handle in X-axis configuration\n}}// Get the descriptive X-axis name\nconst xAxisName=analyzeXAxisColumn();// Calculate appropriate tick interval based on strategy and data size\nlet tickInterval=0;let showTicks=true;switch(xAxisStrategy){case\"auto\":tickInterval=calculateTickInterval(chartData.length);break;case\"sparse\":tickInterval=Math.max(Math.ceil(chartData.length/10),0);break;case\"none\":showTicks=false;break;case\"sample\":tickInterval=0;// Show all ticks since data is already sampled\nbreak;}const xAxisProps={dataKey:headers[0],tickFormatter:showTicks?formatXAxisTick:()=>\"\",allowDuplicatedCategory:false,interval:tickInterval,angle:showTicks?-45:0,textAnchor:showTicks?\"end\":\"middle\",height:showTicks?100:60,tick:showTicks?{fontSize:10}:false,minTickGap:1,label:{value:xAxisName,position:'insideBottom',offset:showTicks?10:-20,textAnchor:'middle'}};const chartMargin={top:20,right:60,left:60,bottom:showTicks?120:80};switch(chartType){case\"line\":return/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:chartMargin,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\",strokeDasharray:\"5 5\"}),/*#__PURE__*/_jsx(XAxis,_objectSpread({},xAxisProps)),renderYAxes(chartData),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:value=>\"\".concat(xAxisName,\": \").concat(formatValue(value)),formatter:(value,name)=>[formatValue(value),name]}),/*#__PURE__*/_jsx(Legend,{}),renderLines()]});case\"bar\":return/*#__PURE__*/_jsxs(BarChart,{data:chartData,margin:chartMargin,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\",strokeDasharray:\"5 5\"}),/*#__PURE__*/_jsx(XAxis,_objectSpread({},xAxisProps)),renderYAxes(chartData),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:value=>\"\".concat(xAxisName,\": \").concat(formatValue(value)),formatter:(value,name)=>[formatValue(value),name]}),/*#__PURE__*/_jsx(Legend,{}),renderBars()]});case\"area\":return/*#__PURE__*/_jsxs(AreaChart,{data:chartData,margin:chartMargin,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\",strokeDasharray:\"5 5\"}),/*#__PURE__*/_jsx(XAxis,_objectSpread({},xAxisProps)),renderYAxes(chartData),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:value=>\"\".concat(xAxisName,\": \").concat(formatValue(value)),formatter:(value,name)=>[formatValue(value),name]}),/*#__PURE__*/_jsx(Legend,{}),renderAreas()]});case\"scatter\":return/*#__PURE__*/_jsxs(ScatterChart,{data:chartData,margin:chartMargin,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\",strokeDasharray:\"5 5\"}),/*#__PURE__*/_jsx(XAxis,_objectSpread(_objectSpread({},xAxisProps),{},{type:\"category\"})),renderYAxes(chartData),/*#__PURE__*/_jsx(Tooltip,{cursor:{strokeDasharray:'3 3'},labelFormatter:value=>\"\".concat(xAxisName,\": \").concat(formatValue(value)),formatter:(value,name)=>[formatValue(value),name]}),/*#__PURE__*/_jsx(Legend,{}),renderScatters()]});case\"pie\":// For pie chart, aggregate data across all rows for selected columns\nconst pieData=selectedColumns.map((col,i)=>{const sum=chartData.reduce((acc,row)=>{const value=Number(row[col]);return acc+(isNaN(value)?0:value);},0);return{name:col,value:sum,color:COLORS[i%COLORS.length]};}).filter(d=>d.value>0);// Show warning if no meaningful data\nif(pieData.length===0||pieData.every(d=>d.value===0)){return/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500\",children:\"Selected columns contain no numeric data for Pie Chart.\"});}return/*#__PURE__*/_jsxs(PieChart,{margin:{top:20,right:20,bottom:20,left:20},children:[/*#__PURE__*/_jsx(Pie,{data:pieData,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:100,fill:\"#8884d8\",label:_ref2=>{let{name,percent}=_ref2;return\"\".concat(name,\" \").concat((percent*100).toFixed(1),\"%\");},children:pieData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[formatValue(value),'Value']}),/*#__PURE__*/_jsx(Legend,{})]});default:return null;}};// Export functionality with html2canvas alternative\nconst exportChart=function(){let isFullChart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const chartElement=document.getElementById(isFullChart?\"full-chart\":\"chart\");if(!chartElement)return;// Simple fallback - create a data URL from SVG if possible\nconst svgElement=chartElement.querySelector('svg');if(svgElement){const svgData=new XMLSerializer().serializeToString(svgElement);const canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');const img=new Image();canvas.width=svgElement.clientWidth||800;canvas.height=svgElement.clientHeight||600;img.onload=function(){ctx.drawImage(img,0,0);const link=document.createElement('a');link.download=isFullChart?'full_chart.png':'chart.png';link.href=canvas.toDataURL('image/png');link.click();};img.src='data:image/svg+xml;base64,'+btoa(unescape(encodeURIComponent(svgData)));}};// Disable zoom buttons if zoom limits reached or no data\nconst canZoomIn=zoomDomain.end-zoomDomain.start>2;const canZoomOut=!(zoomDomain.start===0&&zoomDomain.end===data.length-1);// Get current data size info\nconst currentDataSize=zoomDomain.end-zoomDomain.start+1;const isLargeDataset=data.length>1000;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-6xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold\",children:\"CSV Plotter\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDarkMode(!darkMode),className:\"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors\",\"aria-label\":\"Toggle dark mode\",children:darkMode?\"Light Mode\":\"Dark Mode\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileUpload,className:\"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600 w-full max-w-md\",\"aria-label\":\"Upload CSV file\"}),data.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 flex flex-wrap gap-4 items-center\",children:[/*#__PURE__*/_jsxs(\"select\",{value:chartType,onChange:handleChartTypeChange,className:\"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\",\"aria-label\":\"Select chart type\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"line\",children:\"Line Chart\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bar\",children:\"Bar Chart\"}),/*#__PURE__*/_jsx(\"option\",{value:\"area\",children:\"Area Chart\"}),/*#__PURE__*/_jsx(\"option\",{value:\"scatter\",children:\"Scatter Chart\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pie\",children:\"Pie Chart\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:xAxisStrategy,onChange:e=>setXAxisStrategy(e.target.value),className:\"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\",\"aria-label\":\"Select X-axis display strategy\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"auto\",children:\"Auto Spacing\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sparse\",children:\"Sparse Labels\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sample\",children:\"Sample Data\"}),/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"No Labels\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[\"Showing \",currentDataSize,\" of \",data.length,\" data points\",isLargeDataset&&/*#__PURE__*/_jsx(\"span\",{className:\"block text-xs text-orange-600 dark:text-orange-400\",children:\"Large dataset detected - X-axis strategy helps readability\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2 font-semibold\",children:\"Select Columns to Plot:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:headers.slice(1).map(col=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-1 px-3 py-1 border rounded cursor-pointer select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedColumns.includes(col),onChange:()=>handleColumnToggle(col),className:\"mr-1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:col})]},col))}),selectedColumns.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-600 mt-2\",children:\"Please select at least one column to plot.\"})]}),chartType!=='pie'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomIn,disabled:!canZoomIn,className:\"px-3 py-2 rounded text-white transition-colors \".concat(canZoomIn?\"bg-blue-500 hover:bg-blue-600\":\"bg-gray-400 cursor-not-allowed\"),\"aria-label\":\"Zoom in\",children:\"Zoom In\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomOut,disabled:!canZoomOut,className:\"px-3 py-2 rounded text-white transition-colors \".concat(canZoomOut?\"bg-blue-500 hover:bg-blue-600\":\"bg-gray-400 cursor-not-allowed\"),\"aria-label\":\"Zoom out\",children:\"Zoom Out\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetZoom,className:\"px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\",\"aria-label\":\"Reset zoom\",children:\"Reset Zoom\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart(false),className:\"px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700 transition-colors\",\"aria-label\":\"Export current view as PNG\",children:\"Export View as PNG\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart(true),className:\"px-4 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 transition-colors\",\"aria-label\":\"Export full chart as PNG\",children:\"Export Full Chart as PNG\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"chart\",className:\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"600px\"},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:renderChart()})})}),/*#__PURE__*/_jsx(\"div\",{id:\"full-chart\",style:{position:\"absolute\",top:\"-9999px\",left:\"-9999px\",width:1200,height:800},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:renderChart(\"full\")})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Papa","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","ScatterChart","Scatter","PieChart","Pie","Cell","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","COLORS","App","data","setData","headers","setHeaders","chartType","setChartType","selectedColumns","setSelectedColumns","darkMode","setDarkMode","zoomDomain","setZoomDomain","start","end","xAxisStrategy","setXAxisStrategy","html","document","documentElement","classList","add","remove","handleFileUpload","e","file","target","files","parse","header","skipEmptyLines","dynamicTyping","complete","results","cleanedData","map","row","trimmedRow","Object","entries","forEach","_ref","key","val","trim","length","cols","keys","error","err","console","handleChartTypeChange","value","handleColumnToggle","col","prev","includes","filter","c","handleZoomIn","range","increment","Math","ceil","newStart","newEnd","handleZoomOut","max","min","handleResetZoom","getDataRange","column","values","d","Number","v","isNaN","padding","calculateTickInterval","dataLength","chartWidth","arguments","undefined","maxTicks","floor","interval","sampleData","maxPoints","step","sampled","i","push","renderYAxes","chartData","yAxisId","orientation","stroke","domain","allowDataOverflow","tickFormatter","formatValue","renderLines","type","dataKey","strokeWidth","dot","isAnimationActive","connectNulls","renderBars","fill","renderAreas","fillOpacity","renderScatters","analyzeXAxisColumn","columnName","dateValues","Date","concat","numericValues","nums","sorted","sort","a","b","differences","avgDiff","reduce","sum","diff","toFixed","isInteger","round","uniqueValues","Set","sampleValue","formatXAxisTick","dateObj","getTime","hasTime","getHours","getMinutes","getSeconds","toLocaleString","month","day","hour","minute","hour12","toLocaleDateString","year","substring","String","second","renderChart","mode","className","children","slice","xAxisName","tickInterval","showTicks","xAxisProps","allowDuplicatedCategory","angle","textAnchor","height","tick","fontSize","minTickGap","label","position","offset","chartMargin","top","right","left","bottom","margin","strokeDasharray","_objectSpread","labelFormatter","formatter","name","cursor","pieData","acc","color","every","nameKey","cx","cy","outerRadius","_ref2","percent","entry","index","exportChart","isFullChart","chartElement","getElementById","svgElement","querySelector","svgData","XMLSerializer","serializeToString","canvas","createElement","ctx","getContext","img","Image","width","clientWidth","clientHeight","onload","drawImage","link","download","href","toDataURL","click","src","btoa","unescape","encodeURIComponent","canZoomIn","canZoomOut","currentDataSize","isLargeDataset","onClick","accept","onChange","checked","disabled","id","style"],"sources":["C:/Users/soumy/CSV_Plotter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport {\r\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  AreaChart, Area, ScatterChart, Scatter, PieChart, Pie, Cell\r\n} from \"recharts\";\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1'];\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  const [chartType, setChartType] = useState(\"line\");\r\n  const [selectedColumns, setSelectedColumns] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [zoomDomain, setZoomDomain] = useState({ start: 0, end: 10 });\r\n  const [xAxisStrategy, setXAxisStrategy] = useState(\"auto\"); // auto, sparse, sample, none\r\n\r\n  useEffect(() => {\r\n    const html = document.documentElement;\r\n    darkMode ? html.classList.add(\"dark\") : html.classList.remove(\"dark\");\r\n  }, [darkMode]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    Papa.parse(file, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      dynamicTyping: true,\r\n      complete: (results) => {\r\n        // Trim all string values in every row & every column\r\n        const cleanedData = results.data.map(row => {\r\n          const trimmedRow = {};\r\n          Object.entries(row).forEach(([key, val]) => {\r\n            trimmedRow[key] = typeof val === \"string\" ? val.trim() : val;\r\n          });\r\n          return trimmedRow;\r\n        });\r\n        setData(cleanedData);\r\n\r\n        if (results.data.length > 0) {\r\n          const cols = Object.keys(results.data[0]);\r\n          setHeaders(cols);\r\n\r\n          // Select the second column by default if exists, else empty\r\n          setSelectedColumns(cols.length > 1 ? [cols[1]] : []);\r\n\r\n          setZoomDomain({ start: 0, end: cleanedData.length - 1 });\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error(\"Error parsing CSV:\", err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChartTypeChange = (e) => setChartType(e.target.value);\r\n\r\n  const handleColumnToggle = (col) => {\r\n    setSelectedColumns(prev =>\r\n      prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]\r\n    );\r\n  };\r\n\r\n  // Zoom In: Shrink range by removing 1/4th from both ends\r\n  const handleZoomIn = () => {\r\n    setZoomDomain(prev => {\r\n      const range = prev.end - prev.start;\r\n      if (range <= 2) return prev; // Prevent zooming in too far\r\n      const increment = Math.ceil(range / 4);\r\n      const newStart = prev.start + increment;\r\n      const newEnd = prev.end - increment;\r\n      if (newStart >= newEnd) return prev; // Prevent invalid range\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n      };\r\n    });\r\n  };\r\n\r\n  // Zoom Out: Expand range by adding half of current range to ends\r\n  const handleZoomOut = () => {\r\n    setZoomDomain(prev => {\r\n      const range = prev.end - prev.start;\r\n      const increment = Math.ceil(range / 2);\r\n      const newStart = Math.max(0, prev.start - increment);\r\n      const newEnd = Math.min(data.length - 1, prev.end + increment);\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleResetZoom = () => {\r\n    setZoomDomain({ start: 0, end: data.length - 1 });\r\n  };\r\n\r\n  // Calculate data ranges for better Y-axis scaling\r\n  const getDataRange = (data, column) => {\r\n    const values = data.map(d => Number(d[column])).filter(v => !isNaN(v));\r\n    if (values.length === 0) return [0, 100];\r\n    const min = Math.min(...values);\r\n    const max = Math.max(...values);\r\n    const padding = (max - min) * 0.1;\r\n    return [min - padding, max + padding];\r\n  };\r\n\r\n  // Smart interval calculation for X-axis ticks\r\n  const calculateTickInterval = (dataLength, chartWidth = 800) => {\r\n    const maxTicks = Math.floor(chartWidth / 100); // Assume each tick needs ~100px for readability\r\n    \r\n    if (dataLength <= maxTicks) {\r\n      return 0; // Show all ticks\r\n    }\r\n    \r\n    // Calculate interval to show approximately maxTicks\r\n    const interval = Math.ceil(dataLength / maxTicks);\r\n    return interval - 1; // Recharts uses 0-based interval\r\n  };\r\n\r\n  // Sample data for better performance with large datasets\r\n  const sampleData = (data, maxPoints = 1000) => {\r\n    if (data.length <= maxPoints) return data;\r\n    \r\n    const step = Math.ceil(data.length / maxPoints);\r\n    const sampled = [];\r\n    \r\n    for (let i = 0; i < data.length; i += step) {\r\n      sampled.push(data[i]);\r\n    }\r\n    \r\n    // Always include the last point\r\n    if (sampled[sampled.length - 1] !== data[data.length - 1]) {\r\n      sampled.push(data[data.length - 1]);\r\n    }\r\n    \r\n    return sampled;\r\n  };\r\n\r\n  // Render Y axes for all selected columns, with better scaling\r\n  const renderYAxes = (chartData) => selectedColumns.map((col, i) => {\r\n    const [min, max] = getDataRange(chartData, col);\r\n    return (\r\n      <YAxis\r\n        key={col}\r\n        yAxisId={col}\r\n        orientation={i % 2 === 0 ? 'left' : 'right'}\r\n        stroke={COLORS[i % COLORS.length]}\r\n        domain={[min, max]}\r\n        allowDataOverflow={false}\r\n        tickFormatter={(value) => formatValue(value)}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderLines = () => selectedColumns.map((col, i) => (\r\n    <Line\r\n      key={col}\r\n      yAxisId={col}\r\n      type=\"monotone\"\r\n      dataKey={col}\r\n      stroke={COLORS[i % COLORS.length]}\r\n      strokeWidth={2}\r\n      dot={false}\r\n      isAnimationActive={false}\r\n      connectNulls={false}\r\n    />\r\n  ));\r\n\r\n  const renderBars = () => selectedColumns.map((col, i) => (\r\n    <Bar\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      isAnimationActive={false}\r\n    />\r\n  ));\r\n\r\n  const renderAreas = () => selectedColumns.map((col, i) => (\r\n    <Area\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      stroke={COLORS[i % COLORS.length]}\r\n      fillOpacity={0.6}\r\n      isAnimationActive={false}\r\n      connectNulls={false}\r\n    />\r\n  ));\r\n\r\n  const renderScatters = () => selectedColumns.map((col, i) => (\r\n    <Scatter\r\n      key={col}\r\n      yAxisId={col}\r\n      dataKey={col}\r\n      fill={COLORS[i % COLORS.length]}\r\n      isAnimationActive={false}\r\n    />\r\n  ));\r\n\r\n  // Analyze the X-axis column to determine data pattern and create descriptive name\r\n  const analyzeXAxisColumn = () => {\r\n    if (!data.length || !headers.length) return headers[0] || \"X-Axis\";\r\n    \r\n    const columnName = headers[0];\r\n    const values = data.map(row => row[columnName]).filter(val => val != null);\r\n    \r\n    if (values.length === 0) return columnName;\r\n    \r\n    // Check if values are dates\r\n    const dateValues = values.filter(val => val instanceof Date || !isNaN(Date.parse(val)));\r\n    if (dateValues.length > values.length * 0.8) {\r\n      return `${columnName} (Timeline)`;\r\n    }\r\n    \r\n    // Check if values are numeric\r\n    const numericValues = values.filter(val => !isNaN(Number(val)));\r\n    if (numericValues.length > values.length * 0.8) {\r\n      const nums = numericValues.map(val => Number(val));\r\n      const min = Math.min(...nums);\r\n      const max = Math.max(...nums);\r\n      const range = max - min;\r\n      \r\n      if (range === 0) {\r\n        return `${columnName} (Constant: ${min})`;\r\n      } else if (nums.length > 1) {\r\n        // Check if it's a sequence (like years, months, etc.)\r\n        const sorted = [...nums].sort((a, b) => a - b);\r\n        const differences = [];\r\n        for (let i = 1; i < sorted.length; i++) {\r\n          differences.push(sorted[i] - sorted[i-1]);\r\n        }\r\n        const avgDiff = differences.reduce((sum, diff) => sum + diff, 0) / differences.length;\r\n        \r\n        if (avgDiff > 0 && avgDiff < 1) {\r\n          return `${columnName} (Range: ${min.toFixed(2)} - ${max.toFixed(2)})`;\r\n        } else if (Number.isInteger(avgDiff) && avgDiff > 0) {\r\n          return `${columnName} (Sequence: +${Math.round(avgDiff)})`;\r\n        } else {\r\n          return `${columnName} (Range: ${min} - ${max})`;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Check if values are categorical (strings with repetition)\r\n    const uniqueValues = [...new Set(values)];\r\n    if (uniqueValues.length < values.length * 0.5 && uniqueValues.length > 1) {\r\n      return `${columnName} (${uniqueValues.length} Categories)`;\r\n    }\r\n    \r\n    // Default case - just show the column name with data type hint\r\n    const sampleValue = values[0];\r\n    if (typeof sampleValue === 'string') {\r\n      return `${columnName} (Text)`;\r\n    }\r\n    \r\n    return columnName;\r\n  };\r\n\r\n  // Custom tick formatter for X-axis to handle long labels and dates\r\n  const formatXAxisTick = (value) => {\r\n    if (!value) return \"—\";\r\n    \r\n    // Handle Date objects or date strings\r\n    let dateObj = null;\r\n    if (value instanceof Date) {\r\n      dateObj = value;\r\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\r\n      dateObj = new Date(value);\r\n    }\r\n    \r\n    if (dateObj && !isNaN(dateObj.getTime())) {\r\n      // Check if the date has time information (not just midnight)\r\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\r\n      \r\n      if (hasTime) {\r\n        // Show date and time\r\n        return dateObj.toLocaleString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          hour12: false\r\n        });\r\n      } else {\r\n        // Show just date\r\n        return dateObj.toLocaleDateString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric',\r\n          year: '2-digit'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Handle strings\r\n    if (typeof value === 'string' && value.length > 8) {\r\n      return value.substring(0, 6) + '...';\r\n    }\r\n    \r\n    return String(value);\r\n  };\r\n\r\n  // Format values for display, handling different data types\r\n  const formatValue = (value) => {\r\n    if (!value && value !== 0) return \"—\";\r\n    \r\n    // Handle Date objects or date strings\r\n    let dateObj = null;\r\n    if (value instanceof Date) {\r\n      dateObj = value;\r\n    } else if (typeof value === 'string' && !isNaN(Date.parse(value))) {\r\n      dateObj = new Date(value);\r\n    }\r\n    \r\n    if (dateObj && !isNaN(dateObj.getTime())) {\r\n      // Check if the date has time information\r\n      const hasTime = dateObj.getHours() !== 0 || dateObj.getMinutes() !== 0 || dateObj.getSeconds() !== 0;\r\n      \r\n      if (hasTime) {\r\n        return dateObj.toLocaleString('en-US', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit',\r\n          hour12: false\r\n        });\r\n      } else {\r\n        return dateObj.toLocaleDateString('en-US', {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        });\r\n      }\r\n    }\r\n    \r\n    if (typeof value === 'number') {\r\n      return value.toFixed(2);\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  // Render the chart, supporting normal (zoomed) and full modes\r\n  const renderChart = (mode = \"normal\") => {\r\n    if (!data.length || selectedColumns.length === 0 || headers.length === 0) {\r\n      return <p className=\"text-center text-gray-500\">Please upload CSV and select columns.</p>;\r\n    }\r\n\r\n    // Slice data based on zoom or show full data\r\n    let chartData = mode === \"full\" ? data : data.slice(zoomDomain.start, zoomDomain.end + 1);\r\n    \r\n    // For large datasets, apply sampling if needed\r\n    if (mode === \"full\" && chartData.length > 2000) {\r\n      switch (xAxisStrategy) {\r\n        case \"sample\":\r\n          chartData = sampleData(chartData, 1000);\r\n          break;\r\n        // For other strategies, we'll handle in X-axis configuration\r\n      }\r\n    }\r\n    \r\n    // Get the descriptive X-axis name\r\n    const xAxisName = analyzeXAxisColumn();\r\n\r\n    // Calculate appropriate tick interval based on strategy and data size\r\n    let tickInterval = 0;\r\n    let showTicks = true;\r\n    \r\n    switch (xAxisStrategy) {\r\n      case \"auto\":\r\n        tickInterval = calculateTickInterval(chartData.length);\r\n        break;\r\n      case \"sparse\":\r\n        tickInterval = Math.max(Math.ceil(chartData.length / 10), 0);\r\n        break;\r\n      case \"none\":\r\n        showTicks = false;\r\n        break;\r\n      case \"sample\":\r\n        tickInterval = 0; // Show all ticks since data is already sampled\r\n        break;\r\n    }\r\n\r\n    const xAxisProps = {\r\n      dataKey: headers[0],\r\n      tickFormatter: showTicks ? formatXAxisTick : () => \"\",\r\n      allowDuplicatedCategory: false,\r\n      interval: tickInterval,\r\n      angle: showTicks ? -45 : 0,\r\n      textAnchor: showTicks ? \"end\" : \"middle\",\r\n      height: showTicks ? 100 : 60,\r\n      tick: showTicks ? { fontSize: 10 } : false,\r\n      minTickGap: 1,\r\n      label: { \r\n        value: xAxisName, \r\n        position: 'insideBottom', \r\n        offset: showTicks ? 10 : -20, \r\n        textAnchor: 'middle' \r\n      }\r\n    };\r\n\r\n    const chartMargin = { top: 20, right: 60, left: 60, bottom: showTicks ? 120 : 80 };\r\n\r\n    switch(chartType) {\r\n      case \"line\":\r\n        return (\r\n          <LineChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderLines()}\r\n          </LineChart>\r\n        );\r\n\r\n      case \"bar\":\r\n        return (\r\n          <BarChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderBars()}\r\n          </BarChart>\r\n        );\r\n\r\n      case \"area\":\r\n        return (\r\n          <AreaChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis {...xAxisProps} />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderAreas()}\r\n          </AreaChart>\r\n        );\r\n\r\n      case \"scatter\":\r\n        return (\r\n          <ScatterChart data={chartData} margin={chartMargin}>\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis \r\n              {...xAxisProps}\r\n              type=\"category\"\r\n            />\r\n            {renderYAxes(chartData)}\r\n            <Tooltip \r\n              cursor={{ strokeDasharray: '3 3' }}\r\n              labelFormatter={(value) => `${xAxisName}: ${formatValue(value)}`}\r\n              formatter={(value, name) => [formatValue(value), name]}\r\n            />\r\n            <Legend />\r\n            {renderScatters()}\r\n          </ScatterChart>\r\n        );\r\n\r\n      case \"pie\":\r\n        // For pie chart, aggregate data across all rows for selected columns\r\n        const pieData = selectedColumns.map((col, i) => {\r\n          const sum = chartData.reduce((acc, row) => {\r\n            const value = Number(row[col]);\r\n            return acc + (isNaN(value) ? 0 : value);\r\n          }, 0);\r\n          return {\r\n            name: col,\r\n            value: sum,\r\n            color: COLORS[i % COLORS.length],\r\n          };\r\n        }).filter(d => d.value > 0);\r\n\r\n        // Show warning if no meaningful data\r\n        if (pieData.length === 0 || pieData.every(d => d.value === 0)) {\r\n          return <p className=\"text-center text-gray-500\">Selected columns contain no numeric data for Pie Chart.</p>;\r\n        }\r\n\r\n        return (\r\n          <PieChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n            <Pie\r\n              data={pieData}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              outerRadius={100}\r\n              fill=\"#8884d8\"\r\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(1)}%`}\r\n            >\r\n              {pieData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip formatter={(value) => [formatValue(value), 'Value']} />\r\n            <Legend />\r\n          </PieChart>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Export functionality with html2canvas alternative\r\n  const exportChart = (isFullChart = false) => {\r\n    const chartElement = document.getElementById(isFullChart ? \"full-chart\" : \"chart\");\r\n    if (!chartElement) return;\r\n    \r\n    // Simple fallback - create a data URL from SVG if possible\r\n    const svgElement = chartElement.querySelector('svg');\r\n    if (svgElement) {\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const img = new Image();\r\n      \r\n      canvas.width = svgElement.clientWidth || 800;\r\n      canvas.height = svgElement.clientHeight || 600;\r\n      \r\n      img.onload = function() {\r\n        ctx.drawImage(img, 0, 0);\r\n        const link = document.createElement('a');\r\n        link.download = isFullChart ? 'full_chart.png' : 'chart.png';\r\n        link.href = canvas.toDataURL('image/png');\r\n        link.click();\r\n      };\r\n      \r\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgData)));\r\n    }\r\n  };\r\n\r\n  // Disable zoom buttons if zoom limits reached or no data\r\n  const canZoomIn = zoomDomain.end - zoomDomain.start > 2;\r\n  const canZoomOut = !(zoomDomain.start === 0 && zoomDomain.end === data.length - 1);\r\n\r\n  // Get current data size info\r\n  const currentDataSize = zoomDomain.end - zoomDomain.start + 1;\r\n  const isLargeDataset = data.length > 1000;\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-6xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-3xl font-bold\">CSV Plotter</h1>\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className=\"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100 hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors\"\r\n          aria-label=\"Toggle dark mode\"\r\n        >\r\n          {darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        className=\"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600 w-full max-w-md\"\r\n        aria-label=\"Upload CSV file\"\r\n      />\r\n\r\n      {data.length > 0 && (\r\n        <>\r\n          <div className=\"mb-4 flex flex-wrap gap-4 items-center\">\r\n            <select\r\n              value={chartType}\r\n              onChange={handleChartTypeChange}\r\n              className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\r\n              aria-label=\"Select chart type\"\r\n            >\r\n              <option value=\"line\">Line Chart</option>\r\n              <option value=\"bar\">Bar Chart</option>\r\n              <option value=\"area\">Area Chart</option>\r\n              <option value=\"scatter\">Scatter Chart</option>\r\n              <option value=\"pie\">Pie Chart</option>\r\n            </select>\r\n\r\n            <select\r\n              value={xAxisStrategy}\r\n              onChange={(e) => setXAxisStrategy(e.target.value)}\r\n              className=\"p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\r\n              aria-label=\"Select X-axis display strategy\"\r\n            >\r\n              <option value=\"auto\">Auto Spacing</option>\r\n              <option value=\"sparse\">Sparse Labels</option>\r\n              <option value=\"sample\">Sample Data</option>\r\n              <option value=\"none\">No Labels</option>\r\n            </select>\r\n\r\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Showing {currentDataSize} of {data.length} data points\r\n              {isLargeDataset && (\r\n                <span className=\"block text-xs text-orange-600 dark:text-orange-400\">\r\n                  Large dataset detected - X-axis strategy helps readability\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <p className=\"mb-2 font-semibold\">Select Columns to Plot:</p>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {headers.slice(1).map((col) => (\r\n                <label key={col} className=\"flex items-center gap-1 px-3 py-1 border rounded cursor-pointer select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedColumns.includes(col)}\r\n                    onChange={() => handleColumnToggle(col)}\r\n                    className=\"mr-1\"\r\n                  />\r\n                  <span className=\"text-sm\">{col}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            {selectedColumns.length === 0 && (\r\n              <p className=\"text-sm text-red-600 mt-2\">Please select at least one column to plot.</p>\r\n            )}\r\n          </div>\r\n\r\n          {chartType !== 'pie' && (\r\n            <div className=\"mb-4 flex flex-wrap gap-2\">\r\n              <button\r\n                onClick={handleZoomIn}\r\n                disabled={!canZoomIn}\r\n                className={`px-3 py-2 rounded text-white transition-colors ${canZoomIn ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`}\r\n                aria-label=\"Zoom in\"\r\n              >\r\n                Zoom In\r\n              </button>\r\n              <button\r\n                onClick={handleZoomOut}\r\n                disabled={!canZoomOut}\r\n                className={`px-3 py-2 rounded text-white transition-colors ${canZoomOut ? \"bg-blue-500 hover:bg-blue-600\" : \"bg-gray-400 cursor-not-allowed\"}`}\r\n                aria-label=\"Zoom out\"\r\n              >\r\n                Zoom Out\r\n              </button>\r\n              <button\r\n                onClick={handleResetZoom}\r\n                className=\"px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\r\n                aria-label=\"Reset zoom\"\r\n              >\r\n                Reset Zoom\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-4 flex flex-wrap gap-2\">\r\n            <button\r\n              onClick={() => exportChart(false)}\r\n              className=\"px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700 transition-colors\"\r\n              aria-label=\"Export current view as PNG\"\r\n            >\r\n              Export View as PNG\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => exportChart(true)}\r\n              className=\"px-4 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 transition-colors\"\r\n              aria-label=\"Export full chart as PNG\"\r\n            >\r\n              Export Full Chart as PNG\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            id=\"chart\"\r\n            className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg overflow-hidden\"\r\n          >\r\n            <div style={{ width: \"100%\", height: \"600px\" }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                {renderChart()}\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Hidden chart for full export */}\r\n          <div\r\n            id=\"full-chart\"\r\n            style={{ position: \"absolute\", top: \"-9999px\", left: \"-9999px\", width: 1200, height: 800 }}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              {renderChart(\"full\")}\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}