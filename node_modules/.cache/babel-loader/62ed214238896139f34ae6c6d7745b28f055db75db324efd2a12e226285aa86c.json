{"ast":null,"code":"import React,{useState}from\"react\";import Papa from\"papaparse\";import{LineChart,Line,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import html2canvas from\"html2canvas\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[data,setData]=useState([]);const[headers,setHeaders]=useState([]);// When user uploads a CSV file\nconst handleFileUpload=e=>{const file=e.target.files[0];Papa.parse(file,{header:true,// parse CSV with header row\nskipEmptyLines:true,complete:results=>{setData(results.data);// store parsed data\nsetHeaders(Object.keys(results.data[0]));// extract headers (column names)\n}});};// Export chart by rendering the chart div as an image\nconst exportChart=id=>{const chart=document.getElementById(id);html2canvas(chart).then(canvas=>{const link=document.createElement(\"a\");link.download=\"\".concat(id,\".png\");link.href=canvas.toDataURL();link.click();});};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-4\",children:\"CSV Plotter\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileUpload,className:\"mb-6\"}),data.length>0&&headers.length>=2&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"lineChart\",className:\"mb-6 bg-white p-4 shadow rounded\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:\"Line Chart\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:headers[0]}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:headers[1],stroke:\"#8884d8\"})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart(\"lineChart\"),className:\"mt-2 px-4 py-1 bg-blue-500 text-white rounded\",children:\"Download Line Chart\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"barChart\",className:\"mb-6 bg-white p-4 shadow rounded\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:\"Bar Chart\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:headers[0]}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:headers[1],fill:\"#82ca9d\"})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart(\"barChart\"),className:\"mt-2 px-4 py-1 bg-green-500 text-white rounded\",children:\"Download Bar Chart\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","Papa","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","html2canvas","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","data","setData","headers","setHeaders","handleFileUpload","e","file","target","files","parse","header","skipEmptyLines","complete","results","Object","keys","exportChart","id","chart","document","getElementById","then","canvas","link","createElement","download","concat","href","toDataURL","click","className","children","type","accept","onChange","length","width","height","stroke","dataKey","onClick","fill"],"sources":["C:/Users/soumy/react-tailwind-starter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n\r\n  // When user uploads a CSV file\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    Papa.parse(file, {\r\n      header: true,        // parse CSV with header row\r\n      skipEmptyLines: true,\r\n      complete: (results) => {\r\n        setData(results.data);                  // store parsed data\r\n        setHeaders(Object.keys(results.data[0]));  // extract headers (column names)\r\n      },\r\n    });\r\n  };\r\n\r\n  // Export chart by rendering the chart div as an image\r\n  const exportChart = (id) => {\r\n    const chart = document.getElementById(id);\r\n    html2canvas(chart).then((canvas) => {\r\n      const link = document.createElement(\"a\");\r\n      link.download = `${id}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">CSV Plotter</h1>\r\n\r\n      {/* File Upload Input */}\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} className=\"mb-6\" />\r\n\r\n      {/* Show charts only if data is present and there are at least 2 columns */}\r\n      {data.length > 0 && headers.length >= 2 && (\r\n        <>\r\n          {/* Line Chart */}\r\n          <div id=\"lineChart\" className=\"mb-6 bg-white p-4 shadow rounded\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Line Chart</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={data}>\r\n                <CartesianGrid stroke=\"#ccc\" />\r\n                <XAxis dataKey={headers[0]} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey={headers[1]} stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <button onClick={() => exportChart(\"lineChart\")} className=\"mt-2 px-4 py-1 bg-blue-500 text-white rounded\">\r\n              Download Line Chart\r\n            </button>\r\n          </div>\r\n\r\n          {/* Bar Chart */}\r\n          <div id=\"barChart\" className=\"mb-6 bg-white p-4 shadow rounded\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Bar Chart</h2>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={data}>\r\n                <CartesianGrid stroke=\"#ccc\" />\r\n                <XAxis dataKey={headers[0]} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey={headers[1]} fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            <button onClick={() => exportChart(\"barChart\")} className=\"mt-2 px-4 py-1 bg-green-500 text-white rounded\">\r\n              Download Bar Chart\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}