{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\CSV_Plotter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, PieChart, Pie, Cell } from \"recharts\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1'];\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [chartType, setChartType] = useState(\"line\");\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Toggle dark mode class on <html>\n  useEffect(() => {\n    const html = document.documentElement;\n    if (darkMode) {\n      html.classList.add(\"dark\");\n    } else {\n      html.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const cleanedData = results.data.map(row => ({\n          ...row,\n          [Object.keys(row)[0]]: row[Object.keys(row)[0]].trim() // trim month field\n        }));\n        setData(cleanedData);\n        setHeaders(Object.keys(results.data[0]));\n        setSelectedColumns([Object.keys(results.data[0])[1]]); // default select second column\n      }\n    });\n  };\n  const handleChartTypeChange = e => setChartType(e.target.value);\n  const handleColumnToggle = col => {\n    setSelectedColumns(prev => prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]);\n  };\n\n  // Multiple Y axes, auto color\n  const renderYAxes = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(YAxis, {\n    yAxisId: col,\n    orientation: i % 2 === 0 ? 'left' : 'right',\n    stroke: COLORS[i % COLORS.length]\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n  const renderLines = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Line, {\n    yAxisId: col,\n    type: \"monotone\",\n    dataKey: col,\n    stroke: COLORS[i % COLORS.length]\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this));\n  const renderBars = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Bar, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length]\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this));\n  const renderAreas = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Area, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length],\n    stroke: COLORS[i % COLORS.length]\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this));\n  const renderScatters = () => selectedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Scatter, {\n    yAxisId: col,\n    dataKey: col,\n    fill: COLORS[i % COLORS.length]\n  }, col, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this));\n  const renderChart = () => {\n    switch (chartType) {\n      case \"line\":\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: headers[0],\n            tickFormatter: value => value || \"—\",\n            allowDuplicatedCategory: false,\n            interval: 0 // 👈 Force showing all ticks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), renderYAxes(), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), renderLines()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      case \"bar\":\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: headers[0],\n            tickFormatter: value => value || \"—\",\n            allowDuplicatedCategory: false,\n            interval: 0 // 👈 Force showing all ticks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), renderYAxes(), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), renderBars()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this);\n      case \"area\":\n        return /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: headers[0],\n            tickFormatter: value => value || \"—\",\n            allowDuplicatedCategory: false,\n            interval: 0 // 👈 Force showing all ticks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), renderYAxes(), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), renderAreas()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this);\n      case \"scatter\":\n        return /*#__PURE__*/_jsxDEV(ScatterChart, {\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: headers[0],\n            tickFormatter: value => value || \"—\",\n            allowDuplicatedCategory: false,\n            interval: 0 // 👈 Force showing all ticks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), renderYAxes(), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), renderScatters()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this);\n      case \"pie\":\n        const pieData = selectedColumns.map((col, i) => ({\n          name: col,\n          value: Number(data[0][col]) || 0,\n          color: COLORS[i % COLORS.length]\n        }));\n        return /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: pieData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            label: true,\n            children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: entry.color\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"CSV Plotter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100\",\n        children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      className: \"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: chartType,\n        onChange: handleChartTypeChange,\n        className: \"mb-4 p-2 border rounded dark:bg-gray-800 dark:border-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"line\",\n          children: \"Line Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bar\",\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"area\",\n          children: \"Area Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"scatter\",\n          children: \"Scatter Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pie\",\n          children: \"Pie Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 font-semibold\",\n          children: \"Select Columns to Plot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), headers.slice(1).map(col => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedColumns.includes(col),\n            onChange: () => handleColumnToggle(col),\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), col]\n        }, col, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const chartElement = document.getElementById(\"chart\");\n            html2canvas(chartElement).then(canvas => {\n              const link = document.createElement(\"a\");\n              link.download = \"chart.png\";\n              link.href = canvas.toDataURL(\"image/png\");\n              link.click();\n            });\n          },\n          className: \"mb-4 px-4 py-2 rounded bg-blue-600 text-white hover:bg-blue-700\",\n          children: \"Export as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart\",\n          className: \"bg-white dark:bg-gray-800 p-4 rounded shadow\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 400,\n            children: renderChart()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pJaGnUVhwF824yT7pxll9WYLgMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","ScatterChart","Scatter","PieChart","Pie","Cell","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","App","_s","data","setData","headers","setHeaders","chartType","setChartType","selectedColumns","setSelectedColumns","darkMode","setDarkMode","html","document","documentElement","classList","add","remove","handleFileUpload","e","file","target","files","parse","header","skipEmptyLines","complete","results","cleanedData","map","row","Object","keys","trim","handleChartTypeChange","value","handleColumnToggle","col","prev","includes","filter","c","renderYAxes","i","yAxisId","orientation","stroke","length","fileName","_jsxFileName","lineNumber","columnNumber","renderLines","type","dataKey","renderBars","fill","renderAreas","renderScatters","renderChart","children","tickFormatter","allowDuplicatedCategory","interval","pieData","name","Number","color","nameKey","cx","cy","outerRadius","label","entry","index","className","onClick","accept","onChange","slice","checked","chartElement","getElementById","then","canvas","link","createElement","download","href","toDataURL","click","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/soumy/CSV_Plotter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport {\r\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  AreaChart, Area, ScatterChart, Scatter, PieChart, Pie, Cell\r\n} from \"recharts\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#8dd1e1'];\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  const [chartType, setChartType] = useState(\"line\");\r\n  const [selectedColumns, setSelectedColumns] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // Toggle dark mode class on <html>\r\n  useEffect(() => {\r\n    const html = document.documentElement;\r\n    if (darkMode) {\r\n      html.classList.add(\"dark\");\r\n    } else {\r\n      html.classList.remove(\"dark\");\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    Papa.parse(file, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      complete: (results) => {\r\n        const cleanedData = results.data.map(row => ({\r\n          ...row,\r\n          [Object.keys(row)[0]]: row[Object.keys(row)[0]].trim() // trim month field\r\n        }));\r\n        setData(cleanedData);\r\n        setHeaders(Object.keys(results.data[0]));\r\n        setSelectedColumns([Object.keys(results.data[0])[1]]); // default select second column\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleChartTypeChange = (e) => setChartType(e.target.value);\r\n\r\n  const handleColumnToggle = (col) => {\r\n    setSelectedColumns(prev =>\r\n      prev.includes(col) ? prev.filter(c => c !== col) : [...prev, col]\r\n    );\r\n  };\r\n\r\n  // Multiple Y axes, auto color\r\n  const renderYAxes = () => selectedColumns.map((col, i) => (\r\n    <YAxis\r\n      key={col}\r\n      yAxisId={col}\r\n      orientation={i % 2 === 0 ? 'left' : 'right'}\r\n      stroke={COLORS[i % COLORS.length]}\r\n    />\r\n  ));\r\n\r\n  const renderLines = () => selectedColumns.map((col, i) => (\r\n    <Line key={col} yAxisId={col} type=\"monotone\" dataKey={col} stroke={COLORS[i % COLORS.length]} />\r\n  ));\r\n\r\n  const renderBars = () => selectedColumns.map((col, i) => (\r\n    <Bar key={col} yAxisId={col} dataKey={col} fill={COLORS[i % COLORS.length]} />\r\n  ));\r\n\r\n  const renderAreas = () => selectedColumns.map((col, i) => (\r\n    <Area key={col} yAxisId={col} dataKey={col} fill={COLORS[i % COLORS.length]} stroke={COLORS[i % COLORS.length]} />\r\n  ));\r\n\r\n  const renderScatters = () => selectedColumns.map((col, i) => (\r\n    <Scatter key={col} yAxisId={col} dataKey={col} fill={COLORS[i % COLORS.length]} />\r\n  ));\r\n\r\n  const renderChart = () => {\r\n    switch(chartType) {\r\n      case \"line\":\r\n        return (\r\n          <LineChart data={data}>\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis\r\n              dataKey={headers[0]}\r\n              tickFormatter={value => value || \"—\"}\r\n              allowDuplicatedCategory={false}\r\n              interval={0} // 👈 Force showing all ticks\r\n            />\r\n            {renderYAxes()}\r\n            <Tooltip />\r\n            <Legend />\r\n            {renderLines()}\r\n          </LineChart>\r\n        );\r\n      case \"bar\":\r\n        return (\r\n          <BarChart data={data}>\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis\r\n              dataKey={headers[0]}\r\n              tickFormatter={value => value || \"—\"}\r\n              allowDuplicatedCategory={false}\r\n              interval={0} // 👈 Force showing all ticks\r\n            />\r\n            {renderYAxes()}\r\n            <Tooltip />\r\n            <Legend />\r\n            {renderBars()}\r\n          </BarChart>\r\n        );\r\n      case \"area\":\r\n        return (\r\n          <AreaChart data={data}>\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis\r\n              dataKey={headers[0]}\r\n              tickFormatter={value => value || \"—\"}\r\n              allowDuplicatedCategory={false}\r\n              interval={0} // 👈 Force showing all ticks\r\n            />\r\n            {renderYAxes()}\r\n            <Tooltip />\r\n            <Legend />\r\n            {renderAreas()}\r\n          </AreaChart>\r\n        );\r\n      case \"scatter\":\r\n        return (\r\n          <ScatterChart>\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis\r\n              dataKey={headers[0]}\r\n              tickFormatter={value => value || \"—\"}\r\n              allowDuplicatedCategory={false}\r\n              interval={0} // 👈 Force showing all ticks\r\n            />\r\n            {renderYAxes()}\r\n            <Tooltip />\r\n            <Legend />\r\n            {renderScatters()}\r\n          </ScatterChart>\r\n        );\r\n      case \"pie\":\r\n        const pieData = selectedColumns.map((col, i) => ({\r\n          name: col,\r\n          value: Number(data[0][col]) || 0,\r\n          color: COLORS[i % COLORS.length],\r\n        }));\r\n        return (\r\n          <PieChart>\r\n            <Pie\r\n              data={pieData}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              label\r\n            >\r\n              {pieData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip />\r\n            <Legend />\r\n          </PieChart>\r\n        );\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-4xl mx-auto min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-500\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-3xl font-bold\">CSV Plotter</h1>\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className=\"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n        >\r\n          {darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        className=\"mb-6 p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\r\n      />\r\n\r\n      {data.length > 0 && (\r\n        <>\r\n          <select\r\n            value={chartType}\r\n            onChange={handleChartTypeChange}\r\n            className=\"mb-4 p-2 border rounded dark:bg-gray-800 dark:border-gray-600\"\r\n          >\r\n            <option value=\"line\">Line Chart</option>\r\n            <option value=\"bar\">Bar Chart</option>\r\n            <option value=\"area\">Area Chart</option>\r\n            <option value=\"scatter\">Scatter Chart</option>\r\n            <option value=\"pie\">Pie Chart</option>\r\n          </select>\r\n\r\n          <div className=\"mb-4\">\r\n            <p className=\"mb-1 font-semibold\">Select Columns to Plot:</p>\r\n            {headers.slice(1).map((col) => (\r\n              <label key={col} className=\"mr-4\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedColumns.includes(col)}\r\n                  onChange={() => handleColumnToggle(col)}\r\n                  className=\"mr-1\"\r\n                />\r\n                {col}\r\n              </label>\r\n            ))}\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                const chartElement = document.getElementById(\"chart\");\r\n                html2canvas(chartElement).then(canvas => {\r\n                  const link = document.createElement(\"a\");\r\n                  link.download = \"chart.png\";\r\n                  link.href = canvas.toDataURL(\"image/png\");\r\n                  link.click();\r\n                });\r\n              }}\r\n              className=\"mb-4 px-4 py-2 rounded bg-blue-600 text-white hover:bg-blue-700\"\r\n            >\r\n              Export as PNG\r\n            </button>\r\n\r\n            <div id=\"chart\" className=\"bg-white dark:bg-gray-800 p-4 rounded shadow\">\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                {renderChart()}\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}